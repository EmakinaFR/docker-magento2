version: "3.4"

services:
  blackfire:
    image: blackfire/blackfire
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    depends_on:
      - php

  elasticsearch:
    build: elasticsearch
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  maildev:
    image: djfarrelly/maildev
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    depends_on:
      - php
    ports:
      - 1080:80

  mysql:
    build: mysql
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    tty: true

  nginx:
    build: nginx
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    ports:
      - 443:443
    volumes:
      # Project files
      - code_sync:/var/www/html:nocopy
      # Custom configuration
      - ${PROJECT_LOCATION}/docker/local/nginx.conf:/etc/nginx/conf.d/custom.conf:ro
    tty: true

  php:
    build:
      context: ./php
      target: ${DOCKER_PHP_IMAGE}
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    environment:
      - SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock
    volumes:
      # Project files
      - code_sync:/var/www/html:nocopy
      # Custom configuration
      - ./php/conf.d/custom.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      # SSH socket
      - /run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock
    tty: true

  redis:
    image: redis:3.2-alpine
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    volumes:
      - redis:/data
    tty: true

  synchro:
    build: synchro
    container_name: ${COMPOSE_PROJECT_NAME}_synchro
    volumes:
      - code_sync:/var/www/html:nocopy

volumes:
  code_sync: {}
  elasticsearch: {}
  mysql: {}
  redis: {}
