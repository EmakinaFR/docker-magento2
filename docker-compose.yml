services:
  blackfire:
    image: blackfire/blackfire:2
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    depends_on:
      - php

  elasticsearch:
    image: ajardin/magento2-elasticsearch:${DOCKER_ELASTICSEARCH_IMAGE}
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  maildev:
    image: maildev/maildev
    environment:
        MAILDEV_SMTP_PORT: 25
    depends_on:
      - php
    ports:
      - 1080:1080

  mysql:
    image: mysql:${DOCKER_MYSQL_IMAGE}
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
      - ./mysql/conf.d/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
    tty: true

  nginx:
    image: ajardin/magento2-nginx:latest
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    ports:
      - 443:443
    volumes:
      # Project files
      - ${PROJECT_LOCATION}:/var/www/html:rw,delegated
      # Custom configuration
      - ${PROJECT_LOCATION}/docker/local/nginx.conf:/etc/nginx/conf.d/custom.conf:ro
    tty: true

  php:
    image: ajardin/php:${DOCKER_PHP_IMAGE}
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    environment:
      - SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock
    volumes:
      # Project files
      - ${PROJECT_LOCATION}:/var/www/html:rw,delegated
      # Custom configuration
      - ./php/conf.d/custom.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      # SSH socket
      - /run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock
      # Composer cache
      - ${COMPOSER_CACHE_DIR:-~/Library/Caches/composer}:/.composer/cache
    tty: true

  redis:
    image: redis:${DOCKER_REDIS_IMAGE}-alpine
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    volumes:
      - redis:/data
    tty: true

volumes:
  elasticsearch: {}
  mysql: {}
  redis: {}
